# Generated by Django 4.2.7 on 2025-09-01 20:40

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trips', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RouteCalculation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_distance_miles', models.FloatField(help_text='Total route distance in miles')),
                ('total_distance_km', models.FloatField(help_text='Total route distance in kilometers')),
                ('estimated_duration_seconds', models.PositiveIntegerField(help_text='Estimated duration in seconds')),
                ('estimated_duration_hours', models.FloatField(help_text='Estimated duration in hours')),
                ('route_polyline', models.TextField(help_text='Encoded polyline for the route')),
                ('bbox_north', models.FloatField()),
                ('bbox_south', models.FloatField()),
                ('bbox_east', models.FloatField()),
                ('bbox_west', models.FloatField()),
                ('api_provider', models.CharField(default='openrouteservice', max_length=50)),
                ('api_response_data', models.JSONField(blank=True, help_text='Full API response for debugging', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trip', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='route', to='trips.trip')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('traffic_jam', 'Traffic Jam'), ('accident', 'Accident'), ('construction', 'Construction'), ('weather', 'Weather'), ('road_closure', 'Road Closure'), ('weight_restriction', 'Weight Restriction'), ('height_restriction', 'Height Restriction')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('distance_from_start', models.FloatField(help_text='Distance from route start in miles')),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('estimated_delay_minutes', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traffic_alerts', to='routes.routecalculation')),
            ],
            options={
                'ordering': ['route', 'distance_from_start'],
            },
        ),
        migrations.CreateModel(
            name='RouteSegment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sequence_order', models.PositiveIntegerField()),
                ('start_lat', models.FloatField()),
                ('start_lng', models.FloatField()),
                ('end_lat', models.FloatField()),
                ('end_lng', models.FloatField()),
                ('distance_miles', models.FloatField()),
                ('duration_seconds', models.PositiveIntegerField()),
                ('instruction', models.TextField(blank=True, help_text='Turn-by-turn instruction')),
                ('highway_type', models.CharField(blank=True, max_length=50)),
                ('road_name', models.CharField(blank=True, max_length=200)),
                ('speed_limit', models.PositiveIntegerField(blank=True, help_text='Speed limit in mph', null=True)),
                ('segment_polyline', models.TextField(blank=True, help_text='Encoded polyline for this segment')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='routes.routecalculation')),
            ],
            options={
                'ordering': ['route', 'sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='RestStop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rest_type', models.CharField(choices=[('meal_break', '30-minute meal break'), ('short_rest', 'Short rest break'), ('daily_rest', '10-hour daily rest'), ('weekly_restart', '34-hour restart')], max_length=20)),
                ('required_duration_minutes', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=200)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('distance_from_start', models.FloatField(help_text='Distance from route start in miles')),
                ('sequence_order', models.PositiveIntegerField()),
                ('hours_driven_before', models.FloatField(help_text='Hours driven before this rest')),
                ('hours_on_duty_before', models.FloatField(help_text='Hours on duty before this rest')),
                ('has_truck_parking', models.BooleanField(default=True)),
                ('has_sleeper_facilities', models.BooleanField(default=False)),
                ('has_restroom', models.BooleanField(default=True)),
                ('has_food', models.BooleanField(default=False)),
                ('has_shower', models.BooleanField(default=False)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rest_stops', to='routes.routecalculation')),
            ],
            options={
                'ordering': ['route', 'sequence_order'],
            },
        ),
        migrations.CreateModel(
            name='FuelStop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=500)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('distance_from_start', models.FloatField(help_text='Distance from route start in miles')),
                ('sequence_order', models.PositiveIntegerField()),
                ('estimated_fuel_needed', models.FloatField(blank=True, help_text='Estimated fuel needed in gallons', null=True)),
                ('stop_duration_minutes', models.PositiveIntegerField(default=30, help_text='Estimated stop duration')),
                ('has_truck_parking', models.BooleanField(default=True)),
                ('has_restroom', models.BooleanField(default=True)),
                ('has_food', models.BooleanField(default=False)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_stops', to='routes.routecalculation')),
            ],
            options={
                'ordering': ['route', 'sequence_order'],
            },
        ),
    ]
