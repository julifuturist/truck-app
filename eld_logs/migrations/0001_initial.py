# Generated by Django 4.2.7 on 2025-09-01 20:40

import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trips', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DutyStatus',
            fields=[
                ('code', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('counts_toward_driving', models.BooleanField(default=False)),
                ('counts_toward_duty', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ELDLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('log_date', models.DateField()),
                ('vehicle_id', models.CharField(blank=True, max_length=50)),
                ('odometer_start', models.PositiveIntegerField(blank=True, null=True)),
                ('odometer_end', models.PositiveIntegerField(blank=True, null=True)),
                ('total_drive_time', models.DurationField(default=datetime.timedelta(0))),
                ('total_duty_time', models.DurationField(default=datetime.timedelta(0))),
                ('total_off_duty_time', models.DurationField(default=datetime.timedelta(0))),
                ('total_sleeper_time', models.DurationField(default=datetime.timedelta(0))),
                ('has_driving_violation', models.BooleanField(default=False)),
                ('has_duty_violation', models.BooleanField(default=False)),
                ('violation_notes', models.TextField(blank=True)),
                ('is_certified', models.BooleanField(default=False)),
                ('certified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eld_logs', to='trips.driver')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eld_logs', to='trips.trip')),
            ],
            options={
                'ordering': ['-log_date'],
                'unique_together': {('driver', 'log_date')},
            },
        ),
        migrations.CreateModel(
            name='HOSViolation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('violation_type', models.CharField(choices=[('drive_11h', 'Driving more than 11 hours'), ('duty_14h', 'On duty more than 14 hours'), ('cycle_70h', 'Cycle limit exceeded (70 hours)'), ('cycle_60h', 'Cycle limit exceeded (60 hours)'), ('rest_break', 'Required rest break missed'), ('daily_rest', '10-hour daily rest period not met')], max_length=20)),
                ('severity', models.CharField(choices=[('warning', 'Warning'), ('violation', 'Violation'), ('critical', 'Critical')], default='violation', max_length=20)),
                ('description', models.TextField()),
                ('actual_value', models.FloatField(help_text='Actual hours/time value')),
                ('limit_value', models.FloatField(help_text='Legal limit value')),
                ('violation_time', models.DateTimeField()),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eld_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violations', to='eld_logs.eldlog')),
            ],
        ),
        migrations.CreateModel(
            name='ELDLogSheet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('grid_data', models.JSONField(help_text='24-hour grid data for visual representation')),
                ('summary_data', models.JSONField(help_text='Summary information for the log sheet')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='eld_sheets/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('eld_log', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='log_sheet', to='eld_logs.eldlog')),
            ],
        ),
        migrations.CreateModel(
            name='DutyStatusRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('duty_status', models.CharField(choices=[('off_duty', 'Off Duty'), ('sleeper_berth', 'Sleeper Berth'), ('driving', 'Driving'), ('on_duty_not_driving', 'On Duty (Not Driving)')], max_length=20)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=500)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('odometer', models.PositiveIntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_automatic', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('edit_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('eld_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='duty_records', to='eld_logs.eldlog')),
            ],
            options={
                'ordering': ['eld_log', 'start_time'],
            },
        ),
    ]
